syntax = "proto3";

package rides;

option go_package = "github.com/wzslr321/road_runner/server/rides/src";

service Rides {
  rpc FindRide(FindRideRequest) returns (stream FindRideResponse) {}
  rpc StartRide(StartRideRequest) returns (StartRideResponse) {}
  rpc CancelRide(CancelRideRequest) returns (CancelRideResponse) {}
  rpc EndRide(EndRideRequest) returns (EndRideResponse) {}
  rpc CreateRide(CreateRideRequest) returns (CreateRideResponse) {}
}

message StartRideRequest{
  string rider_id = 1;
  string driver_id = 2;
  string start_lat = 3;
  string start_long = 4;
  string end_lat = 5;
  string end_long = 6;
  string ride_distance = 7;
  string ride_duration = 8;
}

message StartRideResponse {
  string ride_id = 1;
  int32 code = 2;
  string message = 3;
} // Later, it should return Stream which tracks estimated arrival time

message FindRideRequest {
  string start_lat = 1;
  string start_long = 2;
}

message FindRideResponse {
  string ride_id = 1;
  string driver_id = 2;
  string start_lat = 3;
  string start_long = 4;
  string end_lat = 5;
  string end_long = 6;
  string ride_distance = 7;
  string ride_duration = 8;
  int32 code = 9;
  string message = 10;
  // price will be calculated by company prices
}

message CancelRideRequest {
  string ride_id = 1;
}

message CancelRideResponse {
  int32 code = 1;
  string message = 2;
}

message EndRideRequest {
  string ride_id = 1;
}

message EndRideResponse {
  int32 code = 1;
  string message = 2;
}

message CreateRideRequest {
  string ride_id = 1;
  string driver_id = 2;
  string start_lat = 3;
  string start_long = 4;
}

message CreateRideResponse {
  int32 code = 1;
  string message = 2;
}
